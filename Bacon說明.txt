主要檔案為 Bacon.php
使用方式為創建一個新的Bacon即可創造連線
ex. $connection = new Bacon();
    $connection.login("123","456");

*請先執行一次"tableSet.php"確定table都建立完成 以及匯入測試資料
*Bacon內的$dbName請先確認名稱是否與你建的資料庫名稱相同
*若以前有跑過而有誤請先刪除table重新跑一次

現有訂單類、顧客資料類、菜單類、套餐類功能

function 介紹:

    訂單類:

    addOrder($status, $ID, $price, $GT, $FT, $user, $items): void
        新增新的訂單
        $status:    狀態 (請預設為未確認)
        $ID:        訂單編號
        $price:     價格
        $GT:        創建時間
        $FT:        完成時間
        $user:      訂單的客戶ID
        $items      訂單內容(以JSON方式存入)
        *注意不用存入客戶名稱 取出時會給不用擔心

    checkNewOrder(): boolean
        檢查有沒有新的訂單
        *請前端用一個loop去執行確認
        return boolean
            true:   有新訂單 (去執行 getNewOrder())
            false:  無新訂單

    getFinishOrder(): JSON
        取得[已結帳]與[拒絕]狀態的訂單
        return JSON檔

    getUnFinishOrder(): JSON
        取得[未確認]、[未完成]與[已完成]的訂單
        return JSON檔

    getNewOrder(): JSON
        只取得最新加入的訂單[未確認]
        return JSON檔

    changeOrderStatus($ID,$status): void
        更改指定order的status
        $ID 訂單的ID
        $status 愈改成的狀態

    顧客資料類:
    
    login($ID,$pw): boolean
        登入帳號
        $ID:    顧客ID
        $pw:    顧客帳號
        return boolean
            true:   登入成功
            false:  登入失敗
    
    register($ID,$pw,$name,$age,$gender,$email): boolean
        註冊帳號
        $ID:        註冊ID(電話號碼)
        $pw:        註冊密碼
        $name:      名子
        $age:       年齡
        $gender:    性別
        $email:     郵件帳戶
        return boolean
            true:   註冊成功
            false:  註冊失敗，可能有重複ID
        *各項資料請在前端就確認有無缺失 此function沒有檢查功能

    getCustomer(): JSON
        取得全部顧客資料
        return JSON檔

    searchCustomer($str): JSON
        搜尋顧客資料
        $str:   搜尋條件，可為ID或是名子
        return JSON檔 所有符合搜尋條件的顧客完整資料
    
    餐點類:

    addItem($ID,$type,$price,$picture,$info): boolean
        新增餐點
        $ID 餐點的名稱作為primary key 所以更改無法改名稱
        $type 菜單的種類
        $price 餐點價格
        $picture 餐點的照片路徑
        $info 餐點說明
        return boolean
            true: 增加成功
            false:增加失敗
    
    editItem($ID,$type,$price,$picture,$info): boolean
        修改餐點 修改方式請直接輸入修改後的餐點資訊即可
        $ID 餐點的名稱作為primary key 所以更改無法改名稱
        $type 菜單的種類
        $price 餐點價格
        $picture 餐點的照片路徑
        $info 餐點說明
        return boolean
            true: 修改成功
            false:修改失敗

    delItem($ID): boolean
        刪除餐點 輸入欲刪除的餐點名稱
        $ID 餐點的名稱
        return boolean
            true: 刪除成功
            false:刪除失敗

    searchItem($str): JSON
        搜尋餐點
        $str 搜尋的字串 可為餐點名稱 或 類別
        return JSON檔
    
    getItem(): JSON
        取得所有餐點資訊
        return JSON檔

    套餐類:

    addCombo($ID, $price, $picture, $items, $info): boolean
        新增套餐
        $ID 套餐名稱
        $price 套餐價格
        $picture 套餐圖片路徑
        $item 套餐內容
        $info 套餐說明
        return boolean
            true: 新增成功
            false:新增失敗
    
    editCombo($ID,$price,$picture,$items,$info): boolean
        修改套餐 修改方式請直接輸入修改後套餐資料即可
        $ID 套餐名稱
        $price 套餐價格
        $picture 套餐圖片路徑
        $item 套餐內容
        $info 套餐說明
        return boolean
            true: 修改成功
            false:修改失敗

    delCombo($ID):boolean 
        刪除套餐 輸入欲刪除的套餐名稱
        $ID 套餐的名稱
        return boolean
            true: 刪除成功
            false:刪除失敗

    searchCombo($str): JSON
        搜尋餐點
        $str 搜尋的字串 搜尋套餐名稱
        return JSON檔

    getCombo(): JSON
        取得所有套餐資訊
        return JSON檔

